name: Main CI

on:
  pull_request:
    branches:
      - "main"

jobs:
  all-status-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - yaml-lint
      - action-lint
      - dotenv-lint
      - dockerfile-lint
      - docker-build-check
      - golang-build-check
      - golang-vet-check
      - golang-fmt-check
      - golang-lint-check
      - golang-test-comment-check
      - golang-test-check
      - golang-generate-check
    steps:
      - uses: actions/checkout@v4
      - name: Check all-status-check
        run: |
          diff \
            <(yq ".jobs | del(.all-status-check) | keys.[]" .github/workflows/ci.yml) \
            <(yq ".jobs.all-status-check.needs.[]" .github/workflows/ci.yml)

  yaml-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-yamllint@1dca3ad811867be18fbe293a9818d715a6c2cd46 # v1.20.0
        with:
          level: warning
          yamllint_flags: "-c .yamllint ."
          fail_on_error: true

  action-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@abd537417cf4991e1ba8e21a67b1119f4f53b8e0 # v1.64.1
        with:
          level: warning
          fail_on_error: true

  dotenv-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dotenv-linter/action-dotenv-linter@382525b7d91e7b71b52e064b8f1fa5908c4650d2 # v2.24.0
        with:
          dotenv_linter_flags: --skip UnorderedKey
          fail_on_error: true

  dockerfile-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Dockerfile lint
        uses: reviewdog/action-hadolint@a588cf93c77060a2836b260c6f0860dc102e8d83 # v1.48.2
        with:
          fail_on_error: true

  docker-build-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
      - name: Build and push
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6
        with:
          push: false
          context: .
          file: Dockerfile

  golang-build-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go build
        run: go build -v ./cmd/main.go

  golang-vet-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go vet
        run: go vet ./...

  golang-fmt-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go fmt
        run: go fmt ./...
      - name: Check diff
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            exit 1
          fi

  golang-lint-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - uses: golangci/golangci-lint-action@ec5d18412c0aeab7936cb16880d708ba2a64e1ae # v6.2.0

  golang-test-comment-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go test
        id: golang-test
        run: |
          TEST_OUT=$(go test ./... -coverpkg=./... -p=5)
          TEST_EXIT_CODE=$?
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "comment<<$EOF"
            printf "# Test coverage\n\n"
            if [ $TEST_EXIT_CODE -eq 0 ]; then
              printf ":white_check_mark: All tests passed successfully.\n\n"
              printf "| Status | Package | Time | Coverage |\n"
              printf "|--------|---------|------|----------|\n"
              echo "$TEST_OUT" | sed -E "s/^\?\s+/?:/g; s/^ok\s+/ok:/g; s/^\s/:/g; s/\s+/ /g; s/coverage:/::/g; s/([0-9.]+)s\s::/\:\1s\:/g; s/ of statements//g;" | sed  -e "s/in .\/...//g" | awk -F'[:]' '{ print "| " $1 " | " $2 " | " $3 " |" $4 " |"}'
            else
              printf ":red_circle: Some tests failed.\n\n"
              printf "<details>\n"
              printf "<summary>go test result</summary>\n"
              printf "\n\`\`\`\n\n"
              echo "$TEST_OUT"
              printf "\n\`\`\`\n\n"
              printf "</details>\n"
            fi
            echo "$EOF"
          } >> "$GITHUB_ENV"
          exit $TEST_EXIT_CODE
        continue-on-error: true
      - name: Create PR comment
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728 # v2.9.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: golang-test
          message: ${{ env.comment }}
      - name: Error check
        if: ${{ steps.golang-test.outcome != 'success' }}
        run: exit 1

  golang-test-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@8b4478c7019be847373babde9300210e7de34bfb # v2.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run go test
        id: golang-test
        run: |
          TEST_OUT=$(go test -json -v ./... -p=5 2>&1)
          TEST_EXIT=$?
          echo "$TEST_OUT" | tee /tmp/gotest.log | gotestfmt
          exit $TEST_EXIT
        continue-on-error: true
      - uses: actions/upload-artifact@v4
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error
      - name: Error check
        if: ${{ steps.golang-test.outcome != 'success' }}
        run: exit 1

  golang-generate-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go generate
        run: go generate ./...
      - name: Check diff
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            exit 1
          fi
