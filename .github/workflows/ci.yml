name: Main CI

on:
  pull_request:
    branches:
      - "main"

jobs:
  all-status-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - yaml-lint
      - action-lint
      - dotenv-lint
      - dockerfile-lint
      - docker-build-check
      - golang-build-check
      - golang-vet-check
      - golang-fmt-check
      - golang-lint-check
      - golang-test-comment-check
      - golang-test-check
      - golang-generate-check
    steps:
      - uses: actions/checkout@v4
      - name: Check all-status-check
        run: |
          diff \
            <(yq ".jobs | del(.all-status-check) | keys.[]" .github/workflows/ci.yml) \
            <(yq ".jobs.all-status-check.needs.[]" .github/workflows/ci.yml)

  yaml-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-yamllint@f01d8a48fd8d89f89895499fca2cff09f9e9e8c0 # v1.21.0
        with:
          level: warning
          yamllint_flags: "-c .yamllint ."
          fail_on_error: true

  action-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-actionlint@95395aac8c053577d0bc67eb7b74936c660c6f66 # v1.67.0
        with:
          level: warning
          fail_on_error: true

  dotenv-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dotenv-linter/action-dotenv-linter@21287e2624aaf2dc8da5dd8ccfe8e49c63501116 # v2.25.0
        with:
          dotenv_linter_flags: --skip UnorderedKey
          fail_on_error: true

  dockerfile-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Dockerfile lint
        uses: reviewdog/action-hadolint@fc7ee4a9f71e521bc43e370819247b70e5327540 # v1.50.2
        with:
          fail_on_error: true

  docker-build-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          push: false
          context: .
          file: Dockerfile

  golang-build-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go build
        run: go build -v ./cmd/main.go

  golang-vet-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go vet
        run: go vet ./...

  golang-fmt-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go fmt
        run: go fmt ./...
      - name: Check diff
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            exit 1
          fi

  golang-lint-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - uses: golangci/golangci-lint-action@9fae48acfc02a90574d7c304a1758ef9895495fa # v7.0.1

  golang-test-comment-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go test
        id: golang-test
        run: |
          TEST_OUT=$(go test ./... -coverpkg=./... -p=5)
          TEST_EXIT_CODE=$?
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "comment<<$EOF"
            printf "# Test coverage\n\n"
            if [ $TEST_EXIT_CODE -eq 0 ]; then
              printf ":white_check_mark: All tests passed successfully.\n\n"
              printf "| Status | Package | Time | Coverage |\n"
              printf "|--------|---------|------|----------|\n"
              echo "$TEST_OUT" | sed -E "s/^\?\s+/?:/g; s/^ok\s+/ok:/g; s/^\s/:/g; s/\s+/ /g; s/coverage:/::/g; s/([0-9.]+)s\s::/\:\1s\:/g; s/ of statements//g;" | sed  -e "s/in .\/...//g" | awk -F'[:]' '{ print "| " $1 " | " $2 " | " $3 " |" $4 " |"}'
            else
              printf ":red_circle: Some tests failed.\n\n"
              printf "<details>\n"
              printf "<summary>go test result</summary>\n"
              printf "\n\`\`\`\n\n"
              echo "$TEST_OUT"
              printf "\n\`\`\`\n\n"
              printf "</details>\n"
            fi
            echo "$EOF"
          } >> "$GITHUB_ENV"
          exit $TEST_EXIT_CODE
        continue-on-error: true
      - name: Create PR comment
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2.9.4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: golang-test
          message: ${{ env.comment }}
      - name: Error check
        if: ${{ steps.golang-test.outcome != 'success' }}
        run: exit 1

  golang-test-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@8b4478c7019be847373babde9300210e7de34bfb # v2.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run go test
        id: golang-test
        run: |
          TEST_OUT=$(go test -json -v ./... -p=5 2>&1)
          TEST_EXIT=$?
          echo "$TEST_OUT" | tee /tmp/gotest.log | gotestfmt
          exit $TEST_EXIT
        continue-on-error: true
      - uses: actions/upload-artifact@v4
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error
      - name: Error check
        if: ${{ steps.golang-test.outcome != 'success' }}
        run: exit 1

  golang-generate-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go generate
        run: go generate ./...
      - name: Check diff
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            exit 1
          fi
